#!/usr/bin/env bash

#set -x
#set -euo pipefail

declare -r prog=$(basename "$0")
declare -r endpoint=https://api.autodns.com/v1
declare -r ttl=600

if ! which jq >/dev/null 2>&1; then
    echo "jq not installed, please install jq"
    exit 1
fi

if ! which curl >/dev/null 2>&1; then
    echo "curl not installed, please install curl"
    exit 1
fi

if [ -f ~/.autodns-cli.rc ]; then
    set -o allexport
    # shellcheck disable=SC1091
    source ~/.autodns-cli.rc
    set +o allexport
fi

source $( cd "$( dirname $(readlink -f ${BASH_SOURCE[0]}) )" >/dev/null 2>&1 && pwd )/func.sh

subcommand=$1
case $subcommand in
    "" | "-h" | "--help")
        sub_help
        ;;
    "-z" | "--zone")
        shift
        MY_ZONE=$1
        shift
        subcommand=$1
        shift
        declare -r command="sub_${subcommand}" 
        $command "$@"
        err=$?
        if [ $err = 127 ]; then
            echo "Error: '$subcommand' is not a known subcommand." >&2
            echo "       Run '${prog} --help' for a list of known subcommands." >&2
            exit 1
        elif [ $err -ne 0 ]; then
            echo "Error: '$subcommand' Failed." >&2
            exit 1
        fi
        ;;
    *)
        shift
        declare -r command="sub_${subcommand}" 
        $command "$@"
        err=$?
        if [ $err = 127 ]; then
            echo "Error: '$subcommand' is not a known subcommand." >&2
            echo "       Run '${prog} --help' for a list of known subcommands." >&2
            exit 1
        elif [ $err -ne 0 ]; then
            echo "Error: '$subcommand' Failed." >&2
            exit 1
        fi
        ;;
esac
